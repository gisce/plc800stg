# -*- coding: UTF-8 -*-
from plc800stg.billings import PlcMonthlyBillingsParser, PlcDailyBillingsParser
from plc800stg.utils import assert_list_dict_eq

with description('Parse billings from PLC800 with plc800stg'):
    with it('Parsing monthly billings'):
        input_billing_plc = "501005337;1;6;31/12/2019 00:00:00;42901;9837;17794;4417;2153;6337;2363;24755;" \
                            "6478;11127;1420;1225;3568;937;1711;133;508;531;85;253;201;29.16;20.15;29.16;" \
                            "15.38;14.83;16.76;14.62"
        billings = PlcMonthlyBillingsParser(input_billing_plc, "Bascul")
        expected_result = [{'ae': 0,
                            'ai': 42901,
                            'cnc_name': 'Bascul',
                            'contract': 1,
                            'date_begin': '2019-12-01 00:00:00',
                            'date_end': '2019-12-31 00:00:00',
                            'date_max': False,
                            'max': 29.16,
                            'name': '501005337',
                            'period': 0,
                            'r1': 24755,
                            'r2': 0,
                            'r3': 0,
                            'r4': 1711,
                            'type': 'month',
                            'value': 'a'},
                           {'ae': 0,
                            'ai': 9837,
                            'cnc_name': 'Bascul',
                            'contract': 1,
                            'date_begin': '2019-12-01 00:00:00',
                            'date_end': '2019-12-31 00:00:00',
                            'date_max': False,
                            'max': 20.15,
                            'name': '501005337',
                            'period': 1,
                            'r1': 6478,
                            'r2': 0,
                            'r3': 0,
                            'r4': 133,
                            'type': 'month',
                            'value': 'a'},
                           {'ae': 0,
                            'ai': 17794,
                            'cnc_name': 'Bascul',
                            'contract': 1,
                            'date_begin': '2019-12-01 00:00:00',
                            'date_end': '2019-12-31 00:00:00',
                            'date_max': False,
                            'max': 29.16,
                            'name': '501005337',
                            'period': 2,
                            'r1': 11127,
                            'r2': 0,
                            'r3': 0,
                            'r4': 508,
                            'type': 'month',
                            'value': 'a'},
                           {'ae': 0,
                            'ai': 4417,
                            'cnc_name': 'Bascul',
                            'contract': 1,
                            'date_begin': '2019-12-01 00:00:00',
                            'date_end': '2019-12-31 00:00:00',
                            'date_max': False,
                            'max': 15.38,
                            'name': '501005337',
                            'period': 3,
                            'r1': 1420,
                            'r2': 0,
                            'r3': 0,
                            'r4': 531,
                            'type': 'month',
                            'value': 'a'},
                           {'ae': 0,
                            'ai': 2153,
                            'cnc_name': 'Bascul',
                            'contract': 1,
                            'date_begin': '2019-12-01 00:00:00',
                            'date_end': '2019-12-31 00:00:00',
                            'date_max': False,
                            'max': 14.83,
                            'name': '501005337',
                            'period': 4,
                            'r1': 1225,
                            'r2': 0,
                            'r3': 0,
                            'r4': 85,
                            'type': 'month',
                            'value': 'a'},
                           {'ae': 0,
                            'ai': 6337,
                            'cnc_name': 'Bascul',
                            'contract': 1,
                            'date_begin': '2019-12-01 00:00:00',
                            'date_end': '2019-12-31 00:00:00',
                            'date_max': False,
                            'max': 16.76,
                            'name': '501005337',
                            'period': 5,
                            'r1': 3568,
                            'r2': 0,
                            'r3': 0,
                            'r4': 253,
                            'type': 'month',
                            'value': 'a'},
                           {'ae': 0,
                            'ai': 2363,
                            'cnc_name': 'Bascul',
                            'contract': 1,
                            'date_begin': '2019-12-01 00:00:00',
                            'date_end': '2019-12-31 00:00:00',
                            'date_max': False,
                            'max': 14.62,
                            'name': '501005337',
                            'period': 6,
                            'r1': 937,
                            'r2': 0,
                            'r3': 0,
                            'r4': 201,
                            'type': 'month',
                            'value': 'a'}]
        assert_list_dict_eq(expected_result, billings.billings, 'name')

    with it('Parsing daily billings'):
        input_billing_plc = "141003502;04/01/2020 00:00:00;00032092;00000000;00012378;00000000;00000000;00000843"
        billings = PlcDailyBillingsParser(input_billing_plc, "Futbol")
        expected_result = [{'ae': 0,
                            'ai': 32092,
                            'cnc_name': 'Futbol',
                            'contract': 1,
                            'date_begin': '2020-01-04 00:00:00',
                            'date_end': '2020-01-04 00:00:00',
                            'date_max': False,
                            'max': 0,
                            'name': '141003502',
                            'period': 0,
                            'r1': 12378,
                            'r2': 0,
                            'r3': 0,
                            'r4': 843,
                            'type': 'day',
                            'value': 'a'}]
        assert_list_dict_eq(expected_result, billings.billings, 'name')
